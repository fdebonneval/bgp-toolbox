# vim: syntax=yaml

heat_template_version: 2013-05-23

description: Simple Heat template making two Bird instaces to peer

parameters:
  key_name:
    type: string
    default: foucault

  public_net_id:
    type: string
    label: Public network
    description: The ID of the public network. You will need to replace it with your DevStack public network ID
#    default: public
    default: 6ea98324-0f14-49f6-97c0-885d1b8dc517
    constraints:
          - custom_constraint: neutron.network

  image_id:
    type: string
    description: Image to use for the instance
    default: Ubuntu 14.04

  flavor_id:
    type: string
    description: Flavor 2Go 20Go 1vcpu
    default: s1.cw.small-1

resources:

  # Network
  net_north:
    type: OS::Neutron::Net
    properties:
      admin_state_up: true
      shared: false
  net_subnet_north:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: net_north }
      cidr: 10.255.0.0/24
      enable_dhcp: true

  net_east:
    type: OS::Neutron::Net
    properties:
      admin_state_up: true
      shared: false
  net_subnet_east:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: net_east }
      cidr: 10.200.0.0/24
      enable_dhcp: true

  net_west:
    type: OS::Neutron::Net
    properties:
      admin_state_up: true
      shared: false
  net_subnet_west:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: net_west }
      cidr: 10.100.0.0/24
      enable_dhcp: true

# Security groups
  secgroup-icmp:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Enable traffic external traffic on SSH.
      rules: [{protocol: icmp}]
  secgroup-ssh:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Enable traffic external traffic on SSH.
      rules: [{protocol: tcp, port_range_max: 22, port_range_min: 22}]
  secgroup-http-https:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Enable traffic external traffic on HTTP.
      rules: [{protocol: tcp, port_range_max: 80, port_range_min: 80},{protocol: tcp, port_range_max: 443, port_range_min: 443}]
  secgroup-bgp:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Enable traffic external traffic on BGP.
      rules: [{protocol: tcp, port_range_max: 179, port_range_min: 179},{protocol: tcp, port_range_max: 10443, port_range_min: 10443}]

# Floating IPs
  floating_exa:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }
  floating_bird_0:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }
  floating_bird_1:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }
  floating_exa_assos:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: floating_exa }
      server_id: { get_resource: i_exa }
  floating_bird_0_assos:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: floating_bird_0 }
      server_id: { get_resource: i_bird_0 }
  floating_bird_1_assos:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: floating_bird_1 }
      server_id: { get_resource: i_bird_1 }

# VMs
  # VMs
  i_exa:
    type: OS::Nova::Server
    properties:
      # ExaBGP
      image: { get_param: image_id }
      flavor: { get_param: flavor_id }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: exa_port_0 }
      user_data_format: RAW
      user_data:
        #!/bin/bash
        echo "Preparing the instance to be ready to run with Heat..."
        echo "######################################################"
        echo ""
        export DEBIAN_FRONTEND=noninteractive
        apt-get update
        apt-get -f -y -q install exabgp
        cat > /etc/network/interfaces.d/eth1.cfg <<EOF
        auto eth1
        iface eth1 inet dhcp
        EOF
        /sbin/ifdown eth1
        /sbin/ifup eth1
        echo "Setting exabgp for daemonizing"
        sed -i \
          -e "s#EXABGPRUN="no"#EXABGPRUN="yes"#g" \
          /etc/default/exabgp

  i_bird_0:
    type: OS::Nova::Server
    properties:
      # Bird instance 0
      image: { get_param: image_id }
      flavor: { get_param: flavor_id }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: bird_0_port_0 }
        - port: { get_resource: bird_0_port_1 }
      user_data_format: RAW
      user_data:
        #!/bin/bash
        echo "Preparing the instance to be ready to run with Heat..."
        echo "######################################################"
        echo ""
        export DEBIAN_FRONTEND=noninteractive
        apt-get update
        apt-get -f -y -q install bird
        cat > /etc/network/interfaces.d/eth1.cfg <<EOF
        auto eth1
        iface eth1 inet dhcp
        EOF
        /sbin/ifdown eth1
        /sbin/ifup eth1

  i_bird_1:
    type: OS::Nova::Server
    properties:
      # Bird instance 1
      image: { get_param: image_id }
      flavor: { get_param: flavor_id }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: bird_1_port_0 }
        - port: { get_resource: bird_1_port_1 }
      user_data_format: RAW
      user_data: |
        #!/bin/bash
        echo "Preparing the instance to be ready to run with Heat..."
        echo "######################################################"
        echo ""
        export DEBIAN_FRONTEND=noninteractive
        apt-get update
        apt-get -f -y -q install bird
        cat > /etc/network/interfaces.d/eth1.cfg <<EOF
        auto eth1
        iface eth1 inet dhcp
        EOF
        /sbin/ifdown eth1
        /sbin/ifup eth1

  exa_port_0:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: net_north }
      fixed_ips:
        - subnet_id: { get_resource: net_subnet_north }
      security_groups: [{ get_resource: secgroup-icmp }, { get_resource: secgroup-ssh }, { get_resource: secgroup-bgp }]
  bird_0_port_0:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: net_north }
      fixed_ips:
        - subnet_id: { get_resource: net_subnet_north }
      security_groups: [{ get_resource: secgroup-icmp }, { get_resource: secgroup-ssh }, { get_resource: secgroup-bgp }]
  bird_0_port_1:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: net_west }
      fixed_ips:
        - subnet_id: { get_resource: net_subnet_west }
      security_groups: [{ get_resource: secgroup-icmp }, { get_resource: secgroup-ssh }, { get_resource: secgroup-bgp }]
  bird_1_port_0:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: net_north }
      fixed_ips:
        - subnet_id: { get_resource: net_subnet_north }
      security_groups: [{ get_resource: secgroup-icmp }, { get_resource: secgroup-ssh }, { get_resource: secgroup-bgp }]
  bird_1_port_1:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: net_east }
      fixed_ips:
        - subnet_id: { get_resource: net_subnet_east }
      security_groups: [{ get_resource: secgroup-icmp }, { get_resource: secgroup-ssh }, { get_resource: secgroup-bgp }]
